#include "CPU.h"
#include <assert.h>

uint8_t CPU::NOP(void) { assert(0); }
uint8_t CPU::LD_BC_d16(void) { assert(0); }
uint8_t CPU::LD_mBC_A(void) { assert(0); }
uint8_t CPU::INC_BC(void) { assert(0); }
uint8_t CPU::INC_B(void) { assert(0); }
uint8_t CPU::DEC_B(void) { assert(0); }
uint8_t CPU::LD_B_d8(void) { assert(0); }
uint8_t CPU::RLCA(void) { assert(0); }
uint8_t CPU::LD_a16_SP(void) { assert(0); }
uint8_t CPU::ADD_HL_BC(void) { assert(0); }
uint8_t CPU::LD_A_BC(void) { assert(0); }
uint8_t CPU::DEC_BC(void) { assert(0); }
uint8_t CPU::INC_C(void) { assert(0); }
uint8_t CPU::DEC_C(void) { assert(0); }
uint8_t CPU::LD_C_d8(void) { assert(0); }
uint8_t CPU::RRCA(void) { assert(0); }
uint8_t CPU::STOP(void) { assert(0); }
uint8_t CPU::LD_DE_d16(void) { assert(0); }
uint8_t CPU::LD_DE_A(void) { assert(0); }
uint8_t CPU::INC_DE(void) { assert(0); }
uint8_t CPU::INC_D(void) { assert(0); }
uint8_t CPU::DEC_D(void) { assert(0); }
uint8_t CPU::LD_D_d8(void) { assert(0); }
uint8_t CPU::RLA(void) { assert(0); }
uint8_t CPU::JR_r8(void) { assert(0); }
uint8_t CPU::ADD_HL_DE(void) { assert(0); }
uint8_t CPU::LD_A_DE(void) { assert(0); }
uint8_t CPU::DEC_DE(void) { assert(0); }
uint8_t CPU::INC_E(void) { assert(0); }
uint8_t CPU::DEC_E(void) { assert(0); }
uint8_t CPU::LD_E_d8(void) { assert(0); }
uint8_t CPU::RRA(void) { assert(0); }
uint8_t CPU::JR_NZ_r8(void) { assert(0); }
uint8_t CPU::LD_HL_d16(void) { assert(0); }
uint8_t CPU::LD_HLp_A(void) { assert(0); }
uint8_t CPU::INC_HL(void) { assert(0); }
uint8_t CPU::INC_H(void) { assert(0); }
uint8_t CPU::DEC_H(void) { assert(0); }
uint8_t CPU::LD_H_d8(void) { assert(0); }
uint8_t CPU::DAA(void) { assert(0); }
uint8_t CPU::JR_Z_r8(void) { assert(0); }
uint8_t CPU::ADD_HL_HL(void) { assert(0); }
uint8_t CPU::LD_A_HLp(void) { assert(0); }
uint8_t CPU::DEC_HL(void) { assert(0); }
uint8_t CPU::INC_L(void) { assert(0); }
uint8_t CPU::DEC_L(void) { assert(0); }
uint8_t CPU::LD_L_d8(void) { assert(0); }
uint8_t CPU::CPL(void) { assert(0); }
uint8_t CPU::JR_NC_r8(void) { assert(0); }
uint8_t CPU::LD_SP_d16(void) { assert(0); }
uint8_t CPU::LD_HLs_A(void) { assert(0); }
uint8_t CPU::INC_SP(void) { assert(0); }
uint8_t CPU::INC_aHL(void) { assert(0); }
uint8_t CPU::DEC_aHL(void) { assert(0); }
uint8_t CPU::LD_mHL_d8(void) { assert(0); }
uint8_t CPU::SCF(void) { assert(0); }
uint8_t CPU::JR_C_r8(void) { assert(0); }
uint8_t CPU::ADD_HL_SP(void) { assert(0); }
uint8_t CPU::LD_A_HLs(void) { assert(0); }
uint8_t CPU::DEC_SP(void) { assert(0); }
uint8_t CPU::INC_A(void) { assert(0); }
uint8_t CPU::DEC_A(void) { assert(0); }
uint8_t CPU::LD_A_d8(void) { assert(0); }
uint8_t CPU::CCF(void) { assert(0); }
uint8_t CPU::LD_B_B(void) { assert(0); }
uint8_t CPU::LD_B_C(void) { assert(0); }
uint8_t CPU::LD_B_D(void) { assert(0); }
uint8_t CPU::LD_B_E(void) { assert(0); }
uint8_t CPU::LD_B_H(void) { assert(0); }
uint8_t CPU::LD_B_L(void) { assert(0); }
uint8_t CPU::LD_B_HLm(void) { assert(0); }
uint8_t CPU::LD_B_A(void) { assert(0); }
uint8_t CPU::LD_C_B(void) { assert(0); }
uint8_t CPU::LD_C_C(void) { assert(0); }
uint8_t CPU::LD_C_D(void) { assert(0); }
uint8_t CPU::LD_C_E(void) { assert(0); }
uint8_t CPU::LD_C_H(void) { assert(0); }
uint8_t CPU::LD_C_L(void) { assert(0); }
uint8_t CPU::LD_C_HLm(void) { assert(0); }
uint8_t CPU::LD_C_A(void) { assert(0); }
uint8_t CPU::LD_D_B(void) { assert(0); }
uint8_t CPU::LD_D_C(void) { assert(0); }
uint8_t CPU::LD_D_D(void) { assert(0); }
uint8_t CPU::LD_D_E(void) { assert(0); }
uint8_t CPU::LD_D_H(void) { assert(0); }
uint8_t CPU::LD_D_L(void) { assert(0); }
uint8_t CPU::LD_D_HLm(void) { assert(0); }
uint8_t CPU::LD_D_A(void) { assert(0); }
uint8_t CPU::LD_E_B(void) { assert(0); }
uint8_t CPU::LD_E_C(void) { assert(0); }
uint8_t CPU::LD_E_D(void) { assert(0); }
uint8_t CPU::LD_E_E(void) { assert(0); }
uint8_t CPU::LD_E_H(void) { assert(0); }
uint8_t CPU::LD_E_L(void) { assert(0); }
uint8_t CPU::LD_E_HLm(void) { assert(0); }
uint8_t CPU::LD_E_A(void) { assert(0); }
uint8_t CPU::LD_H_B(void) { assert(0); }
uint8_t CPU::LD_H_C(void) { assert(0); }
uint8_t CPU::LD_H_D(void) { assert(0); }
uint8_t CPU::LD_H_E(void) { assert(0); }
uint8_t CPU::LD_H_H(void) { assert(0); }
uint8_t CPU::LD_H_L(void) { assert(0); }
uint8_t CPU::LD_H_HLm(void) { assert(0); }
uint8_t CPU::LD_H_A(void) { assert(0); }
uint8_t CPU::LD_L_B(void) { assert(0); }
uint8_t CPU::LD_L_C(void) { assert(0); }
uint8_t CPU::LD_L_D(void) { assert(0); }
uint8_t CPU::LD_L_E(void) { assert(0); }
uint8_t CPU::LD_L_H(void) { assert(0); }
uint8_t CPU::LD_L_L(void) { assert(0); }
uint8_t CPU::LD_L_HLm(void) { assert(0); }
uint8_t CPU::LD_L_A(void) { assert(0); }
uint8_t CPU::LD_HLm_B(void) { assert(0); }
uint8_t CPU::LD_HLm_C(void) { assert(0); }
uint8_t CPU::LD_HLm_D(void) { assert(0); }
uint8_t CPU::LD_HLm_E(void) { assert(0); }
uint8_t CPU::LD_HLm_H(void) { assert(0); }
uint8_t CPU::LD_HLm_L(void) { assert(0); }
uint8_t CPU::HALT(void) { assert(0); }
uint8_t CPU::LD_HLm_A(void) { assert(0); }
uint8_t CPU::LD_A_B(void) { assert(0); }
uint8_t CPU::LD_A_C(void) { assert(0); }
uint8_t CPU::LD_A_D(void) { assert(0); }
uint8_t CPU::LD_A_E(void) { assert(0); }
uint8_t CPU::LD_A_H(void) { assert(0); }
uint8_t CPU::LD_A_L(void) { assert(0); }
uint8_t CPU::LD_A_HLm(void) { assert(0); }
uint8_t CPU::LD_A_A(void) { assert(0); }
uint8_t CPU::ADD_A_B(void) { assert(0); }
uint8_t CPU::ADD_A_C(void) { assert(0); }
uint8_t CPU::ADD_A_D(void) { assert(0); }
uint8_t CPU::ADD_A_E(void) { assert(0); }
uint8_t CPU::ADD_A_H(void) { assert(0); }
uint8_t CPU::ADD_A_L(void) { assert(0); }
uint8_t CPU::ADD_A_HLm(void) { assert(0); }
uint8_t CPU::ADD_A_A(void) { assert(0); }
uint8_t CPU::ADC_A_B(void) { assert(0); }
uint8_t CPU::ADC_A_C(void) { assert(0); }
uint8_t CPU::ADC_A_D(void) { assert(0); }
uint8_t CPU::ADC_A_E(void) { assert(0); }
uint8_t CPU::ADC_A_H(void) { assert(0); }
uint8_t CPU::ADC_A_L(void) { assert(0); }
uint8_t CPU::ADC_A_HLm(void) { assert(0); }
uint8_t CPU::ADC_A_A(void) { assert(0); }
uint8_t CPU::SUB_B(void) { assert(0); }
uint8_t CPU::SUB_C(void) { assert(0); }
uint8_t CPU::SUB_D(void) { assert(0); }
uint8_t CPU::SUB_E(void) { assert(0); }
uint8_t CPU::SUB_H(void) { assert(0); }
uint8_t CPU::SUB_L(void) { assert(0); }
uint8_t CPU::SUB_HLm(void) { assert(0); }
uint8_t CPU::SUB_A(void) { assert(0); }
uint8_t CPU::SBC_A_B(void) { assert(0); }
uint8_t CPU::SBC_A_C(void) { assert(0); }
uint8_t CPU::SBC_A_D(void) { assert(0); }
uint8_t CPU::SBC_A_E(void) { assert(0); }
uint8_t CPU::SBC_A_H(void) { assert(0); }
uint8_t CPU::SBC_A_L(void) { assert(0); }
uint8_t CPU::SBC_A_HLm(void) { assert(0); }
uint8_t CPU::SBC_A_A(void) { assert(0); }
uint8_t CPU::AND_B(void) { assert(0); }
uint8_t CPU::AND_C(void) { assert(0); }
uint8_t CPU::AND_D(void) { assert(0); }
uint8_t CPU::AND_E(void) { assert(0); }
uint8_t CPU::AND_H(void) { assert(0); }
uint8_t CPU::AND_L(void) { assert(0); }
uint8_t CPU::AND_HLm(void) { assert(0); }
uint8_t CPU::AND_A(void) { assert(0); }
uint8_t CPU::XOR_B(void) { assert(0); }
uint8_t CPU::XOR_C(void) { assert(0); }
uint8_t CPU::XOR_D(void) { assert(0); }
uint8_t CPU::XOR_E(void) { assert(0); }
uint8_t CPU::XOR_H(void) { assert(0); }
uint8_t CPU::XOR_L(void) { assert(0); }
uint8_t CPU::XOR_HLm(void) { assert(0); }
uint8_t CPU::XOR_A(void) { assert(0); }
uint8_t CPU::OR_B(void) { assert(0); }
uint8_t CPU::OR_C(void) { assert(0); }
uint8_t CPU::OR_D(void) { assert(0); }
uint8_t CPU::OR_E(void) { assert(0); }
uint8_t CPU::OR_H(void) { assert(0); }
uint8_t CPU::OR_L(void) { assert(0); }
uint8_t CPU::OR_HLm(void) { assert(0); }
uint8_t CPU::OR_A(void) { assert(0); }
uint8_t CPU::CP_B(void) { assert(0); }
uint8_t CPU::CP_C(void) { assert(0); }
uint8_t CPU::CP_D(void) { assert(0); }
uint8_t CPU::CP_E(void) { assert(0); }
uint8_t CPU::CP_H(void) { assert(0); }
uint8_t CPU::CP_L(void) { assert(0); }
uint8_t CPU::CP_HLm(void) { assert(0); }
uint8_t CPU::CP_A(void) { assert(0); }
uint8_t CPU::RET_NZ(void) { assert(0); }
uint8_t CPU::POP_BC(void) { assert(0); }
uint8_t CPU::JP_NZ_a16(void) { assert(0); }
uint8_t CPU::JP_a16(void) { assert(0); }
uint8_t CPU::CALL_NZ_a16(void) { assert(0); }
uint8_t CPU::PUSH_BC(void) { assert(0); }
uint8_t CPU::ADD_A_d8(void) { assert(0); }
uint8_t CPU::RST_00H(void) { assert(0); }
uint8_t CPU::RET_Z(void) { assert(0); }
uint8_t CPU::RET(void) { assert(0); }
uint8_t CPU::JP_Z_a16(void) { assert(0); }
uint8_t CPU::PREFIX_CB(void) { assert(0); }
uint8_t CPU::CALL_Z_a16(void) { assert(0); }
uint8_t CPU::CALL_a16(void) { assert(0); }
uint8_t CPU::ADC_A_d8(void) { assert(0); }
uint8_t CPU::RST_08H(void) { assert(0); }
uint8_t CPU::RET_NC(void) { assert(0); }
uint8_t CPU::POP_DE(void) { assert(0); }
uint8_t CPU::JP_NC_a16(void) { assert(0); }
uint8_t CPU::CALL_NC_a16(void) { assert(0); }
uint8_t CPU::PUSH_DE(void) { assert(0); }
uint8_t CPU::SUB_d8(void) { assert(0); }
uint8_t CPU::RST_10H(void) { assert(0); }
uint8_t CPU::RET_C(void) { assert(0); }
uint8_t CPU::RETI(void) { assert(0); }
uint8_t CPU::JP_C_a16(void) { assert(0); }
uint8_t CPU::CALL_C_a16(void) { assert(0); }
uint8_t CPU::SBC_A_d8(void) { assert(0); }
uint8_t CPU::RST_18H(void) { assert(0); }
uint8_t CPU::LDH_a8_A(void) { assert(0); }
uint8_t CPU::POP_HL(void) { assert(0); }
uint8_t CPU::LD_Cm_A(void) { assert(0); }
uint8_t CPU::PUSH_HL(void) { assert(0); }
uint8_t CPU::AND_d8(void) { assert(0); }
uint8_t CPU::RST_20H(void) { assert(0); }
uint8_t CPU::ADD_SP_r8(void) { assert(0); }
uint8_t CPU::JP_HLm(void) { assert(0); }
uint8_t CPU::LD_a16_A(void) { assert(0); }
uint8_t CPU::XOR_d8(void) { assert(0); }
uint8_t CPU::RST_28H(void) { assert(0); }
uint8_t CPU::LDH_A_a8(void) { assert(0); }
uint8_t CPU::POP_AF(void) { assert(0); }
uint8_t CPU::LD_A_Cm(void) { assert(0); }
uint8_t CPU::DI(void) { assert(0); }
uint8_t CPU::PUSH_AF(void) { assert(0); }
uint8_t CPU::OR_d8(void) { assert(0); }
uint8_t CPU::RST_30H(void) { assert(0); }
uint8_t CPU::LD_HL_SPr8(void) { assert(0); }
uint8_t CPU::LD_SP_HL(void) { assert(0); }
uint8_t CPU::LD_A_a16(void) { assert(0); }
uint8_t CPU::EI(void) { assert(0); }
uint8_t CPU::CP_d8(void) { assert(0); }
uint8_t CPU::RST_38(void) { assert(0); }
